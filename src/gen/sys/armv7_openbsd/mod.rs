// SPDX-License-Identifier: Apache-2.0 OR MIT
// This file is @generated by test-helper-internal-codegen
// (generate function at tools/codegen/src/ffi.rs).
// It is not intended for manual editing.

#![cfg_attr(rustfmt, rustfmt::skip)]
mod dlfcn;
pub use self::dlfcn::RTLD_DEFAULT;
pub use self::dlfcn::dlsym;
mod sys_auxv;
pub use self::sys_auxv::AT_NULL;
pub use self::sys_auxv::AT_IGNORE;
pub use self::sys_auxv::AT_PAGESZ;
pub use self::sys_auxv::AT_HWCAP;
pub use self::sys_auxv::AT_HWCAP2;
pub use self::sys_auxv::AT_COUNT;
pub use self::sys_auxv::elf_aux_info;
mod sys_sysctl;
pub use self::sys_sysctl::CTL_MACHDEP;
pub use self::sys_sysctl::sysctl;
mod machine_cpu;
pub use self::machine_cpu::CPU_CONSDEV;
pub use self::machine_cpu::CPU_POWERSAVE;
pub use self::machine_cpu::CPU_ALLOWAPERTURE;
pub use self::machine_cpu::CPU_MAXSPEED;
pub use self::machine_cpu::CPU_LIDACTION;
pub use self::machine_cpu::CPU_COMPATIBLE;
pub use self::machine_cpu::CPU_MAXID;
mod machine_elf;
pub use self::machine_elf::HWCAP_SWP;
pub use self::machine_elf::HWCAP_HALF;
pub use self::machine_elf::HWCAP_THUMB;
pub use self::machine_elf::HWCAP_26BIT;
pub use self::machine_elf::HWCAP_FAST_MULT;
pub use self::machine_elf::HWCAP_FPA;
pub use self::machine_elf::HWCAP_VFP;
pub use self::machine_elf::HWCAP_EDSP;
pub use self::machine_elf::HWCAP_JAVA;
pub use self::machine_elf::HWCAP_IWMMXT;
pub use self::machine_elf::HWCAP_CRUNCH;
pub use self::machine_elf::HWCAP_THUMBEE;
pub use self::machine_elf::HWCAP_NEON;
pub use self::machine_elf::HWCAP_VFPv3;
pub use self::machine_elf::HWCAP_VFPv3D16;
pub use self::machine_elf::HWCAP_TLS;
pub use self::machine_elf::HWCAP_VFPv4;
pub use self::machine_elf::HWCAP_IDIVA;
pub use self::machine_elf::HWCAP_IDIVT;
pub use self::machine_elf::HWCAP_VFPD32;
pub use self::machine_elf::HWCAP_IDIV;
pub use self::machine_elf::HWCAP_LPAE;
pub use self::machine_elf::HWCAP_EVTSTRM;
pub use self::machine_elf::HWCAP2_AES;
pub use self::machine_elf::HWCAP2_PMULL;
pub use self::machine_elf::HWCAP2_SHA1;
pub use self::machine_elf::HWCAP2_SHA2;
pub use self::machine_elf::HWCAP2_CRC32;
pub type c_char = u8;
