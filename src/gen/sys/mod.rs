// SPDX-License-Identifier: Apache-2.0 OR MIT
// This file is @generated by test-helper-internal-codegen
// (generate function at tools/codegen/src/ffi.rs).
// It is not intended for manual editing.

#![cfg_attr(rustfmt, rustfmt::skip)]
#![allow(
    dead_code,
    non_camel_case_types,
    non_upper_case_globals,
    unreachable_pub,
    unknown_lints,
    unnameable_types,
    clippy::cast_sign_loss,
    clippy::ptr_as_ptr,
    clippy::pub_underscore_fields,
    clippy::unnecessary_cast,
)]
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod aarch64_linux_gnu;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::aarch64_linux_gnu::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
mod aarch64_be_linux_gnu;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
pub use self::aarch64_be_linux_gnu::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
mod aarch64_linux_gnu_ilp32;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
pub use self::aarch64_linux_gnu_ilp32::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
mod aarch64_be_linux_gnu_ilp32;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
pub use self::aarch64_be_linux_gnu_ilp32::*;
#[cfg(
    all(
        target_arch = "arm",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
mod armv5te_linux_gnueabi;
#[cfg(
    all(
        target_arch = "arm",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
pub use self::armv5te_linux_gnueabi::*;
#[cfg(
    all(
        target_arch = "arm",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
mod armeb_linux_gnueabi;
#[cfg(
    all(
        target_arch = "arm",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
pub use self::armeb_linux_gnueabi::*;
#[cfg(
    all(
        target_arch = "loongarch64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod loongarch64_linux_gnu;
#[cfg(
    all(
        target_arch = "loongarch64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::loongarch64_linux_gnu::*;
#[cfg(
    all(
        target_arch = "mips",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
mod mips_linux_gnu;
#[cfg(
    all(
        target_arch = "mips",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
pub use self::mips_linux_gnu::*;
#[cfg(
    all(
        target_arch = "mips64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
mod mips64_linux_gnuabi64;
#[cfg(
    all(
        target_arch = "mips64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
pub use self::mips64_linux_gnuabi64::*;
#[cfg(
    all(
        target_arch = "mips64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod mips64el_linux_gnuabi64;
#[cfg(
    all(
        target_arch = "mips64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::mips64el_linux_gnuabi64::*;
#[cfg(
    all(
        target_arch = "mips",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
mod mipsel_linux_gnu;
#[cfg(
    all(
        target_arch = "mips",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
pub use self::mipsel_linux_gnu::*;
#[cfg(
    all(
        target_arch = "mips32r6",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
mod mipsisa32r6_linux_gnu;
#[cfg(
    all(
        target_arch = "mips32r6",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
pub use self::mipsisa32r6_linux_gnu::*;
#[cfg(
    all(
        target_arch = "mips32r6",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
mod mipsisa32r6el_linux_gnu;
#[cfg(
    all(
        target_arch = "mips32r6",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
pub use self::mipsisa32r6el_linux_gnu::*;
#[cfg(
    all(
        target_arch = "mips64r6",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
mod mipsisa64r6_linux_gnuabi64;
#[cfg(
    all(
        target_arch = "mips64r6",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
pub use self::mipsisa64r6_linux_gnuabi64::*;
#[cfg(
    all(
        target_arch = "mips64r6",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod mipsisa64r6el_linux_gnuabi64;
#[cfg(
    all(
        target_arch = "mips64r6",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::mipsisa64r6el_linux_gnuabi64::*;
#[cfg(
    all(
        target_arch = "powerpc",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
mod powerpc_linux_gnu;
#[cfg(
    all(
        target_arch = "powerpc",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
pub use self::powerpc_linux_gnu::*;
#[cfg(
    all(
        target_arch = "powerpc64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
mod powerpc64_linux_gnu;
#[cfg(
    all(
        target_arch = "powerpc64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
pub use self::powerpc64_linux_gnu::*;
#[cfg(
    all(
        target_arch = "powerpc64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod powerpc64le_linux_gnu;
#[cfg(
    all(
        target_arch = "powerpc64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::powerpc64le_linux_gnu::*;
#[cfg(
    all(
        target_arch = "riscv32",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
mod riscv32_linux_gnu;
#[cfg(
    all(
        target_arch = "riscv32",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
pub use self::riscv32_linux_gnu::*;
#[cfg(
    all(
        target_arch = "riscv64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod riscv64_linux_gnu;
#[cfg(
    all(
        target_arch = "riscv64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::riscv64_linux_gnu::*;
#[cfg(
    all(
        target_arch = "s390x",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
mod s390x_linux_gnu;
#[cfg(
    all(
        target_arch = "s390x",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
pub use self::s390x_linux_gnu::*;
#[cfg(
    all(
        target_arch = "sparc",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
mod sparc_linux_gnu;
#[cfg(
    all(
        target_arch = "sparc",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
pub use self::sparc_linux_gnu::*;
#[cfg(
    all(
        target_arch = "sparc64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
mod sparc64_linux_gnu;
#[cfg(
    all(
        target_arch = "sparc64",
        target_os = "linux",
        target_env = "gnu",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
pub use self::sparc64_linux_gnu::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "linux",
        target_env = "musl",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod aarch64_linux_musl;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "linux",
        target_env = "musl",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::aarch64_linux_musl::*;
#[cfg(
    all(
        target_arch = "arm",
        target_os = "linux",
        target_env = "musl",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
mod armv5te_linux_musleabi;
#[cfg(
    all(
        target_arch = "arm",
        target_os = "linux",
        target_env = "musl",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
pub use self::armv5te_linux_musleabi::*;
#[cfg(
    all(
        target_arch = "loongarch64",
        target_os = "linux",
        target_env = "musl",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod loongarch64_linux_musl;
#[cfg(
    all(
        target_arch = "loongarch64",
        target_os = "linux",
        target_env = "musl",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::loongarch64_linux_musl::*;
#[cfg(
    all(
        target_arch = "mips",
        target_os = "linux",
        target_env = "musl",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
mod mips_linux_musl;
#[cfg(
    all(
        target_arch = "mips",
        target_os = "linux",
        target_env = "musl",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
pub use self::mips_linux_musl::*;
#[cfg(
    all(
        target_arch = "mips64",
        target_os = "linux",
        target_env = "musl",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
mod mips64_linux_muslabi64;
#[cfg(
    all(
        target_arch = "mips64",
        target_os = "linux",
        target_env = "musl",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
pub use self::mips64_linux_muslabi64::*;
#[cfg(
    all(
        target_arch = "mips64",
        target_os = "linux",
        target_env = "musl",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod mips64el_linux_muslabi64;
#[cfg(
    all(
        target_arch = "mips64",
        target_os = "linux",
        target_env = "musl",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::mips64el_linux_muslabi64::*;
#[cfg(
    all(
        target_arch = "mips",
        target_os = "linux",
        target_env = "musl",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
mod mipsel_linux_musl;
#[cfg(
    all(
        target_arch = "mips",
        target_os = "linux",
        target_env = "musl",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
pub use self::mipsel_linux_musl::*;
#[cfg(
    all(
        target_arch = "powerpc",
        target_os = "linux",
        target_env = "musl",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
mod powerpc_linux_musl;
#[cfg(
    all(
        target_arch = "powerpc",
        target_os = "linux",
        target_env = "musl",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
pub use self::powerpc_linux_musl::*;
#[cfg(
    all(
        target_arch = "powerpc64",
        target_os = "linux",
        target_env = "musl",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
mod powerpc64_linux_musl;
#[cfg(
    all(
        target_arch = "powerpc64",
        target_os = "linux",
        target_env = "musl",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
pub use self::powerpc64_linux_musl::*;
#[cfg(
    all(
        target_arch = "powerpc64",
        target_os = "linux",
        target_env = "musl",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod powerpc64le_linux_musl;
#[cfg(
    all(
        target_arch = "powerpc64",
        target_os = "linux",
        target_env = "musl",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::powerpc64le_linux_musl::*;
#[cfg(
    all(
        target_arch = "riscv32",
        target_os = "linux",
        target_env = "musl",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
mod riscv32_linux_musl;
#[cfg(
    all(
        target_arch = "riscv32",
        target_os = "linux",
        target_env = "musl",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
pub use self::riscv32_linux_musl::*;
#[cfg(
    all(
        target_arch = "riscv64",
        target_os = "linux",
        target_env = "musl",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod riscv64_linux_musl;
#[cfg(
    all(
        target_arch = "riscv64",
        target_os = "linux",
        target_env = "musl",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::riscv64_linux_musl::*;
#[cfg(
    all(
        target_arch = "s390x",
        target_os = "linux",
        target_env = "musl",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
mod s390x_linux_musl;
#[cfg(
    all(
        target_arch = "s390x",
        target_os = "linux",
        target_env = "musl",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
pub use self::s390x_linux_musl::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "linux",
        target_env = "uclibc",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod aarch64_linux_uclibc;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "linux",
        target_env = "uclibc",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::aarch64_linux_uclibc::*;
#[cfg(
    all(
        target_arch = "arm",
        target_os = "linux",
        target_env = "uclibc",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
mod armv5te_linux_uclibceabi;
#[cfg(
    all(
        target_arch = "arm",
        target_os = "linux",
        target_env = "uclibc",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
pub use self::armv5te_linux_uclibceabi::*;
#[cfg(
    all(
        target_arch = "mips",
        target_os = "linux",
        target_env = "uclibc",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
mod mips_linux_uclibc;
#[cfg(
    all(
        target_arch = "mips",
        target_os = "linux",
        target_env = "uclibc",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
pub use self::mips_linux_uclibc::*;
#[cfg(
    all(
        target_arch = "mips",
        target_os = "linux",
        target_env = "uclibc",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
mod mipsel_linux_uclibc;
#[cfg(
    all(
        target_arch = "mips",
        target_os = "linux",
        target_env = "uclibc",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
pub use self::mipsel_linux_uclibc::*;
#[cfg(
    all(
        target_arch = "powerpc",
        target_os = "linux",
        target_env = "uclibc",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
mod powerpc_linux_uclibc;
#[cfg(
    all(
        target_arch = "powerpc",
        target_os = "linux",
        target_env = "uclibc",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
pub use self::powerpc_linux_uclibc::*;
#[cfg(
    all(
        target_arch = "sparc",
        target_os = "linux",
        target_env = "uclibc",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
mod sparc_linux_uclibc;
#[cfg(
    all(
        target_arch = "sparc",
        target_os = "linux",
        target_env = "uclibc",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
pub use self::sparc_linux_uclibc::*;
#[cfg(
    all(
        target_arch = "sparc64",
        target_os = "linux",
        target_env = "uclibc",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
mod sparc64_linux_uclibc;
#[cfg(
    all(
        target_arch = "sparc64",
        target_os = "linux",
        target_env = "uclibc",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
pub use self::sparc64_linux_uclibc::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "android",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod aarch64_linux_android;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "android",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::aarch64_linux_android::*;
#[cfg(
    all(
        target_arch = "arm",
        target_os = "android",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
mod arm_linux_androideabi;
#[cfg(
    all(
        target_arch = "arm",
        target_os = "android",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
pub use self::arm_linux_androideabi::*;
#[cfg(
    all(
        target_arch = "riscv64",
        target_os = "android",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod riscv64_linux_android;
#[cfg(
    all(
        target_arch = "riscv64",
        target_os = "android",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::riscv64_linux_android::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "l4re",
        target_env = "uclibc",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod aarch64_l4re_uclibc;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "l4re",
        target_env = "uclibc",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::aarch64_l4re_uclibc::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "trusty",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod aarch64_trusty;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "trusty",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::aarch64_trusty::*;
#[cfg(
    all(
        target_arch = "arm",
        target_os = "trusty",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
mod armv7_trusty;
#[cfg(
    all(
        target_arch = "arm",
        target_os = "trusty",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
pub use self::armv7_trusty::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "macos",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod aarch64_darwin;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "macos",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::aarch64_darwin::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "ios",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod aarch64_ios;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "ios",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::aarch64_ios::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "tvos",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod aarch64_tvos;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "tvos",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::aarch64_tvos::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "visionos",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod aarch64_visionos;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "visionos",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::aarch64_visionos::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "watchos",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod aarch64_watchos;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "watchos",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::aarch64_watchos::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "watchos",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
mod arm64_32_watchos;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "watchos",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
pub use self::arm64_32_watchos::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "freebsd",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod aarch64_freebsd;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "freebsd",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::aarch64_freebsd::*;
#[cfg(
    all(
        target_arch = "arm",
        target_os = "freebsd",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
mod armv6_freebsd;
#[cfg(
    all(
        target_arch = "arm",
        target_os = "freebsd",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
pub use self::armv6_freebsd::*;
#[cfg(
    all(
        target_arch = "powerpc",
        target_os = "freebsd",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
mod powerpc_freebsd;
#[cfg(
    all(
        target_arch = "powerpc",
        target_os = "freebsd",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
pub use self::powerpc_freebsd::*;
#[cfg(
    all(
        target_arch = "powerpc64",
        target_os = "freebsd",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
mod powerpc64_freebsd;
#[cfg(
    all(
        target_arch = "powerpc64",
        target_os = "freebsd",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
pub use self::powerpc64_freebsd::*;
#[cfg(
    all(
        target_arch = "powerpc64",
        target_os = "freebsd",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod powerpc64le_freebsd;
#[cfg(
    all(
        target_arch = "powerpc64",
        target_os = "freebsd",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::powerpc64le_freebsd::*;
#[cfg(
    all(
        target_arch = "riscv64",
        target_os = "freebsd",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod riscv64_freebsd;
#[cfg(
    all(
        target_arch = "riscv64",
        target_os = "freebsd",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::riscv64_freebsd::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "netbsd",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod aarch64_netbsd;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "netbsd",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::aarch64_netbsd::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "netbsd",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
mod aarch64_be_netbsd;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "netbsd",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
pub use self::aarch64_be_netbsd::*;
#[cfg(
    all(
        target_arch = "arm",
        target_os = "netbsd",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
mod armv6_netbsd_eabihf;
#[cfg(
    all(
        target_arch = "arm",
        target_os = "netbsd",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
pub use self::armv6_netbsd_eabihf::*;
#[cfg(
    all(
        target_arch = "arm",
        target_os = "netbsd",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
mod armebv6_netbsd_eabihf;
#[cfg(
    all(
        target_arch = "arm",
        target_os = "netbsd",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
pub use self::armebv6_netbsd_eabihf::*;
#[cfg(
    all(
        target_arch = "mips",
        target_os = "netbsd",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
mod mipsel_netbsd;
#[cfg(
    all(
        target_arch = "mips",
        target_os = "netbsd",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
pub use self::mipsel_netbsd::*;
#[cfg(
    all(
        target_arch = "powerpc",
        target_os = "netbsd",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
mod powerpc_netbsd;
#[cfg(
    all(
        target_arch = "powerpc",
        target_os = "netbsd",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
pub use self::powerpc_netbsd::*;
#[cfg(
    all(
        target_arch = "powerpc64",
        target_os = "netbsd",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
mod powerpc64_netbsd;
#[cfg(
    all(
        target_arch = "powerpc64",
        target_os = "netbsd",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
pub use self::powerpc64_netbsd::*;
#[cfg(
    all(
        target_arch = "sparc",
        target_os = "netbsd",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
mod sparc_netbsd;
#[cfg(
    all(
        target_arch = "sparc",
        target_os = "netbsd",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
pub use self::sparc_netbsd::*;
#[cfg(
    all(
        target_arch = "sparc64",
        target_os = "netbsd",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
mod sparc64_netbsd;
#[cfg(
    all(
        target_arch = "sparc64",
        target_os = "netbsd",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
pub use self::sparc64_netbsd::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "openbsd",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod aarch64_openbsd;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "openbsd",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::aarch64_openbsd::*;
#[cfg(
    all(
        target_arch = "arm",
        target_os = "openbsd",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
mod armv7_openbsd;
#[cfg(
    all(
        target_arch = "arm",
        target_os = "openbsd",
        target_endian = "little",
        target_pointer_width = "32"
    )
)]
pub use self::armv7_openbsd::*;
#[cfg(
    all(
        target_arch = "powerpc",
        target_os = "openbsd",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
mod powerpc_openbsd;
#[cfg(
    all(
        target_arch = "powerpc",
        target_os = "openbsd",
        target_endian = "big",
        target_pointer_width = "32"
    )
)]
pub use self::powerpc_openbsd::*;
#[cfg(
    all(
        target_arch = "powerpc64",
        target_os = "openbsd",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
mod powerpc64_openbsd;
#[cfg(
    all(
        target_arch = "powerpc64",
        target_os = "openbsd",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
pub use self::powerpc64_openbsd::*;
#[cfg(
    all(
        target_arch = "riscv64",
        target_os = "openbsd",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod riscv64_openbsd;
#[cfg(
    all(
        target_arch = "riscv64",
        target_os = "openbsd",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::riscv64_openbsd::*;
#[cfg(
    all(
        target_arch = "sparc64",
        target_os = "openbsd",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
mod sparc64_openbsd;
#[cfg(
    all(
        target_arch = "sparc64",
        target_os = "openbsd",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
pub use self::sparc64_openbsd::*;
#[cfg(
    all(
        target_arch = "sparc64",
        target_os = "solaris",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
mod sparcv9_solaris;
#[cfg(
    all(
        target_arch = "sparc64",
        target_os = "solaris",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
pub use self::sparcv9_solaris::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "illumos",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod aarch64_illumos;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "illumos",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::aarch64_illumos::*;
#[cfg(
    all(
        target_arch = "powerpc64",
        target_os = "aix",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
mod powerpc64_aix;
#[cfg(
    all(
        target_arch = "powerpc64",
        target_os = "aix",
        target_endian = "big",
        target_pointer_width = "64"
    )
)]
pub use self::powerpc64_aix::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "fuchsia",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod aarch64_fuchsia;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "fuchsia",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::aarch64_fuchsia::*;
#[cfg(
    all(
        target_arch = "riscv64",
        target_os = "fuchsia",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod riscv64_fuchsia;
#[cfg(
    all(
        target_arch = "riscv64",
        target_os = "fuchsia",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::riscv64_fuchsia::*;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "windows",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
mod aarch64_windows_gnullvm;
#[cfg(
    all(
        target_arch = "aarch64",
        target_os = "windows",
        target_env = "gnu",
        target_endian = "little",
        target_pointer_width = "64"
    )
)]
pub use self::aarch64_windows_gnullvm::*;
