// SPDX-License-Identifier: Apache-2.0 OR MIT
// This file is @generated by test-helper-internal-codegen
// (generate function at tools/codegen/src/ffi.rs).
// It is not intended for manual editing.

#![cfg_attr(rustfmt, rustfmt::skip)]

pub const AT_NULL: u32 = 0;
pub const AT_IGNORE: u32 = 1;
pub const AT_EXECFD: u32 = 2;
pub const AT_PHDR: u32 = 3;
pub const AT_PHENT: u32 = 4;
pub const AT_PHNUM: u32 = 5;
pub const AT_PAGESZ: u32 = 6;
pub const AT_BASE: u32 = 7;
pub const AT_FLAGS: u32 = 8;
pub const AT_ENTRY: u32 = 9;
pub const AT_NOTELF: u32 = 10;
pub const AT_UID: u32 = 11;
pub const AT_EUID: u32 = 12;
pub const AT_GID: u32 = 13;
pub const AT_EGID: u32 = 14;
pub const AT_CLKTCK: u32 = 17;
pub const AT_PLATFORM: u32 = 15;
pub const AT_HWCAP: u32 = 16;
pub const AT_FPUCW: u32 = 18;
pub const AT_DCACHEBSIZE: u32 = 19;
pub const AT_ICACHEBSIZE: u32 = 20;
pub const AT_UCACHEBSIZE: u32 = 21;
pub const AT_IGNOREPPC: u32 = 22;
pub const AT_SECURE: u32 = 23;
pub const AT_BASE_PLATFORM: u32 = 24;
pub const AT_RANDOM: u32 = 25;
pub const AT_HWCAP2: u32 = 26;
pub const AT_EXECFN: u32 = 31;
pub const AT_SYSINFO: u32 = 32;
pub const AT_SYSINFO_EHDR: u32 = 33;
pub const AT_L1I_CACHESHAPE: u32 = 34;
pub const AT_L1D_CACHESHAPE: u32 = 35;
pub const AT_L2_CACHESHAPE: u32 = 36;
pub const AT_L3_CACHESHAPE: u32 = 37;
pub const AT_L1I_CACHESIZE: u32 = 40;
pub const AT_L1I_CACHEGEOMETRY: u32 = 41;
pub const AT_L1D_CACHESIZE: u32 = 42;
pub const AT_L1D_CACHEGEOMETRY: u32 = 43;
pub const AT_L2_CACHESIZE: u32 = 44;
pub const AT_L2_CACHEGEOMETRY: u32 = 45;
pub const AT_L3_CACHESIZE: u32 = 46;
pub const AT_L3_CACHEGEOMETRY: u32 = 47;
pub const AT_MINSIGSTKSZ: u32 = 51;
pub const HWCAP_FP: u32 = 1;
pub const HWCAP_ASIMD: u32 = 2;
pub const HWCAP_EVTSTRM: u32 = 4;
pub const HWCAP_AES: u32 = 8;
pub const HWCAP_PMULL: u32 = 16;
pub const HWCAP_SHA1: u32 = 32;
pub const HWCAP_SHA2: u32 = 64;
pub const HWCAP_CRC32: u32 = 128;
pub const HWCAP_ATOMICS: u32 = 256;
pub const HWCAP_FPHP: u32 = 512;
pub const HWCAP_ASIMDHP: u32 = 1024;
pub const HWCAP_CPUID: u32 = 2048;
pub const HWCAP_ASIMDRDM: u32 = 4096;
pub const HWCAP_JSCVT: u32 = 8192;
pub const HWCAP_FCMA: u32 = 16384;
pub const HWCAP_LRCPC: u32 = 32768;
pub const HWCAP_DCPOP: u32 = 65536;
pub const HWCAP_SHA3: u32 = 131072;
pub const HWCAP_SM3: u32 = 262144;
pub const HWCAP_SM4: u32 = 524288;
pub const HWCAP_ASIMDDP: u32 = 1048576;
pub const HWCAP_SHA512: u32 = 2097152;
pub const HWCAP_SVE: u32 = 4194304;
pub const HWCAP_ASIMDFHM: u32 = 8388608;
pub const HWCAP_DIT: u32 = 16777216;
pub const HWCAP_USCAT: u32 = 33554432;
pub const HWCAP_ILRCPC: u32 = 67108864;
pub const HWCAP_FLAGM: u32 = 134217728;
pub const HWCAP_SSBS: u32 = 268435456;
pub const HWCAP_SB: u32 = 536870912;
pub const HWCAP_PACA: u32 = 1073741824;
pub const HWCAP_PACG: u32 = 2147483648;
extern "C" {
    pub fn getauxval(arg1: ::std::os::raw::c_ulong) -> ::std::os::raw::c_ulong;
}
